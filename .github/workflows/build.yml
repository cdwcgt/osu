name: dotnet
on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dotnet-version: ['5.0.x']

    steps:
      - uses: actions/checkout@v2

      #无法将框架克隆到/home/runner/work/osu以外，用此办法暂时规避
      - name: 移动项目
        run: |
          mkdir mfosu
          mv ./* mfosu || true #忽略错误，通配符会匹配mfosu
          mv ./.* mfosu || true #忽略错误，bash会把"."" 和 ".."也归进mv目标里
          if [ ! "$(ls)" == "mfosu" ]; then false; fi #检查当前目录，应当只有mfosu

      - name: 下载框架
        uses: actions/checkout@v2
        with:
          repository: 'MATRIX-feather/osu-framework'
          ref: 'custom'
          path: 'osu-framework'

      - name: 检查目录结构
        run: |
          ls
          echo "pwd: $PWD"

      - name: 安装sdk (${{ matrix.dotnet-version }})
        uses: actions/setup-dotnet@v1.7.2
        with:
          dotnet-version: ${{ matrix.dotnet-version }}

      - name: 解决依赖
        working-directory: ./mfosu
        run: dotnet restore

      - name: 再次检查目录结构
        run: |
          ls
          echo "pwd: $PWD"

      - name: 构建
        working-directory: ./mfosu
        run: dotnet build osu.Desktop -c Release

  #From .github/workflows_/ci.yml
  build-android:
    name: 构建Android
    runs-on: macos-latest
    timeout-minutes: 60
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      #无法将框架克隆到/home/runner/work/osu以外，用此办法暂时规避
      - name: 移动项目
        run: |
          mkdir mfosu
          mv ./* mfosu || true #忽略错误，通配符会匹配mfosu
          mv ./.* mfosu || true #忽略错误，bash会把"."" 和 ".."也归进mv目标里
          if [ ! "$(ls)" == "mfosu" ]; then false; fi #检查当前目录，应当只有mfosu

      - name: 下载框架
        uses: actions/checkout@v2
        with:
          repository: 'MATRIX-feather/osu-framework'
          ref: 'custom'
          path: 'osu-framework'

      # Pin Xamarin.Android version to 11.2 for now to avoid build failures caused by a Xamarin-side regression.
      # See: https://github.com/xamarin/xamarin-android/issues/6284
      # This can be removed/reverted when the fix makes it to upstream and is deployed on github runners.
      - name: Set default Xamarin SDK version
        run: |
            $VM_ASSETS/select-xamarin-sdk-v2.sh --mono=6.12 --android=11.2

      - name: Install .NET 5.0.x
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: "5.0.x"

      # Contrary to seemingly any other msbuild, msbuild running on macOS/Mono
      # cannot accept .sln(f) files as arguments.
      # Build just the main game for now.
      - name: Build
        working-directory: ./mfosu
        run: msbuild osu.Android/osu.Android.csproj /restore /p:Configuration=Debug
